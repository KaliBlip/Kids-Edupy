# English Assistant MVP - Quick Setup Guide

## 🚀 Quick Start (5 minutes)

### 1. Install Dependencies
```bash
pip install streamlit spacy gtts
python -m spacy download en_core_web_lg
```

### 2. Save the Code
Copy the Python code from the artifact and save it as `english_assistant_mvp.py`

### 3. Run the App
```bash
streamlit run english_assistant_mvp.py
```

The app will open in your browser at: http://localhost:8501

---

## 🎯 What This MVP Does

### Core Features:
- ✏️ **Text Input**: Kids type sentences in a friendly interface
- 🔍 **Grammar Checking**: Detects common errors using spaCy + custom rules
- ⭐ **Scoring**: 0-100 score with star rating system
- 🎨 **Kid-Friendly UI**: Colorful, engaging design with emojis
- 🔊 **Text-to-Speech**: Listen to corrected sentences
- 💡 **Learning Tips**: Personalized suggestions for improvement

### Grammar Rules It Catches:
1. **Subject-verb agreement**: "I are" → "I am"
2. **Article errors**: "a apple" → "an apple"  
3. **Word confusions**: "your going" → "you're going"
4. **Capitalization**: "i like" → "I like"
5. **Contractions**: "dont" → "don't"
6. **Missing subjects**: Detects incomplete sentences

---

## 🧪 Test Sentences

Try these example sentences to test the system:

```
1. "i are going to the store"
   ❌ Issues: capitalization, grammar
   ✅ Fixed: "I am going to the store"

2. "He are my friend and we likes to play"  
   ❌ Issues: subject-verb agreement
   ✅ Fixed: "He is my friend and we like to play"

3. "I have a apple and an banana"
   ❌ Issues: article errors  
   ✅ Fixed: "I have an apple and a banana"

4. "your going to love this book"
   ❌ Issues: word confusion, capitalization
   ✅ Fixed: "You're going to love this book"

5. "the cat its very cute"
   ❌ Issues: capitalization, contraction
   ✅ Fixed: "The cat it's very cute"
```

---

## 📊 How the Scoring Works

- **Base Score**: 100 points
- **Penalties**: 
  - Grammar errors: -10 points each
  - Structure issues: -15 points each  
  - Capitalization: -5 points each
- **Bonus**: +1 point per 10 words (encourages longer sentences)
- **Star Rating**: Score ÷ 20 = stars (1-5 stars)

---

## 🔧 Technical Details

### Libraries Used:
- **Streamlit**: Web interface
- **spaCy (en_core_web_lg)**: NLP processing
- **gTTS**: Text-to-speech
- **Regular expressions**: Pattern matching for common errors

### Key Components:
1. **Error Detection**: `detect_grammar_errors()`
2. **Text Correction**: `apply_corrections()`  
3. **Scoring**: `calculate_score()`
4. **Feedback**: `generate_feedback()` and `generate_suggestions()`
5. **Speech**: `text_to_speech()`

### Customizable Rules:
The `COMMON_ERRORS` dictionary contains regex patterns that are easy to modify or extend for additional grammar rules.

---

## 🎨 UI Features

- **Responsive Design**: Works on different screen sizes
- **Color-coded Results**: Red for original, green for corrected
- **Interactive Elements**: Buttons, audio playback, clear visual feedback  
- **Kid-friendly Language**: Simple explanations, encouraging messages
- **Progress Indicators**: Loading spinners, success messages

---

## 🔄 Next Steps for Full Version

This MVP validates the core concept. For production:

1. **Enhanced NLP**: More sophisticated grammar rules
2. **User Accounts**: Save progress, track improvement
3. **Speech Input**: Voice recognition capabilities  
4. **Gamification**: Levels, achievements, challenges
5. **Responsive Design**: Mobile-first approach
6. **Database**: Store user sessions and analytics
7. **Advanced TTS**: Better voice quality, multiple voices
8. **Curriculum Integration**: Aligned with educational standards

---

## 💡 Customization Ideas

### Easy Modifications:
- **Add new grammar rules** in `COMMON_ERRORS` dictionary
- **Adjust scoring** in `calculate_score()` function  
- **Customize feedback messages** in `generate_feedback()`
- **Change UI colors** in the CSS section
- **Add more test sentences** for different skill levels

### Example: Adding a New Rule
```python
# Add to COMMON_ERRORS dictionary:
r'\bgood\s+(than)': r'better \1',  # "good than" → "better than"
```

This MVP provides a solid foundation to test the English learning concept with real users before building the full-scale application!